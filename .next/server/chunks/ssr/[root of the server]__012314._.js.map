{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/data/users.ts"],"sourcesContent":["export const users = [\n  {\n    email: 'sadasfgasf@gmail.com',\n    password: 'sdfasfadsf'\n  },\n  {\n    email: 'fsadsaf@gmail.com',\n    password: 'fdsadsd'\n  }\n]"],"names":[],"mappings":";;;AAAO,MAAM,QAAQ;IACnB;QACE,OAAO;QACP,UAAU;IACZ;IACA;QACE,OAAO;QACP,UAAU;IACZ;CACD"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/configs/auth.ts"],"sourcesContent":["import type { AuthOptions, User } from \"next-auth\";\nimport GoggleProvider from \"next-auth/providers/google\";\nimport Cretentials from \"next-auth/providers/credentials\";\n// import EmailProvider from \"next-auth/providers/email\";\nimport { users } from \"@/data/users\";\n\nexport const authConfig: AuthOptions = {\n  providers: [\n    GoggleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID as string,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n    }),\n    Cretentials({\n      credentials: {\n        email: { label: \"email\", type: \"email\", required: true },\n        password: { label: \"password\", type: \"password\", required: true },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n\n        const currentUser = users.find(\n          (user) => user.email === credentials.email\n        );\n\n        const userWithoutPass = { ...currentUser };\n        delete userWithoutPass.password;\n        \n        return userWithoutPass as User;\n      },\n    }),\n  ],\n};\n"],"names":[],"mappings":";;;AACA;AACA;AACA,yDAAyD;AACzD;;;;AAEO,MAAM,aAA0B;IACrC,WAAW;QACT,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,CAAA,GAAA,wJAAA,CAAA,UAAW,AAAD,EAAE;YACV,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;oBAAS,UAAU;gBAAK;gBACvD,UAAU;oBAAE,OAAO;oBAAY,MAAM;oBAAY,UAAU;gBAAK;YAClE;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,OAAO;gBACT;gBAEA,MAAM,cAAc,oHAAA,CAAA,QAAK,CAAC,IAAI,CAC5B,CAAC,OAAS,KAAK,KAAK,KAAK,YAAY,KAAK;gBAG5C,MAAM,kBAAkB;oBAAE,GAAG,WAAW;gBAAC;gBACzC,OAAO,gBAAgB,QAAQ;gBAE/B,OAAO;YACT;QACF;KACD;AACH"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/profile/page.tsx"],"sourcesContent":["import { authConfig } from \"@/configs/auth\";\nimport { getServerSession } from \"next-auth\";\n\nexport default async function Profile() {\n  const session = await getServerSession(authConfig);\n  return (\n    <div>\n      <h3>Profile of {session?.user?.name}</h3>\n      {session?.user?.image && <img src={session?.user.image} alt=\"user-img\" />}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,sHAAA,CAAA,aAAU;IACjD,qBACE,8OAAC;;0BACC,8OAAC;;oBAAG;oBAAY,SAAS,MAAM;;;;;;;YAC9B,SAAS,MAAM,uBAAS,8OAAC;gBAAI,KAAK,SAAS,KAAK;gBAAO,KAAI;;;;;;;;;;;;AAGlE"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}