{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/lib/utilsTW.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utilsTW\" \n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,wQACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/lib/db.ts"],"sourcesContent":["// lib/prisma.ts\nimport { PrismaClient } from \"@prisma/client\";\n\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma =\n  globalForPrisma.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n\n\nexport const db = prisma\n\n\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;;AAEA,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY;AAE5C,wCAA2C,gBAAgB,MAAM,GAAG;AAG7D,MAAM,KAAK"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/lib/auth.ts"],"sourcesContent":["import NextAuth, { NextAuthOptions } from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport { db } from \"./db\";\nimport { hash, compare } from \"bcrypt\";\n\nexport const authOptions: NextAuthOptions = {\n  adapter: PrismaAdapter(db),\n  secret: process.env.NEXTAUTH_SECRET,\n  session: {\n    strategy: \"jwt\",\n  },\n  pages: {\n    signIn: \"/sign-in\",\n  },\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        username: {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"jsmith@gmail.com\",\n        },\n        email: {\n          label: \"Email\",\n          type: \"email\",\n          placeholder: \"jsmith@gmail.com\",\n        },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n\n        const exixtingUser = await db.user.findUnique({\n          where: { email: credentials?.email },\n        });\n\n        if (!exixtingUser) {\n          return null;\n        }\n\n        const passwordMatch = await compare(\n          credentials.password,\n          exixtingUser.password\n        );\n\n        if (!passwordMatch) {\n          return null;\n        }\n\n        return {\n          id: `${exixtingUser.id}`,\n          username: exixtingUser.username,\n          email: exixtingUser.email,\n        };\n      },\n    }),\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      async profile(profile: any) {\n        const hashedPassword = await hash(\n          \"temporary_password_for_google_users\",\n          10\n        );\n\n        // Перевіряємо, чи користувач уже існує\n        const existingUser = await db.user.findUnique({\n          where: { email: profile.email },\n        });\n\n        if (!existingUser) {\n          // Якщо користувач не існує, створюємо його\n          const newUser = await db.user.create({\n            data: {\n              email: profile.email,\n              username: profile.name || \"Google User\",\n              googleId: profile.sub, // Зберігаємо Google ID\n              password: hashedPassword, // Зберігаємо заглушковий пароль\n            },\n          });\n\n          // Повертаємо користувача у форматі, що відповідає NextAuth\n          return {\n            id: newUser.id.toString(),\n            name: newUser.username,\n            email: newUser.email,\n            username: newUser.username, // Додаємо username\n          };\n        }\n\n        // Якщо користувач існує, повертаємо його\n        return {\n          id: existingUser.id.toString(),\n          name: existingUser.username,\n          email: existingUser.email,\n          username: existingUser.username, // Додаємо username\n        };\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        return {\n          ...token,\n          username: user.username,\n        };\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      return {\n        ...session,\n        user: {\n          ...session.user,\n          username: token.username,\n          // accessToken: token.accessToken,\n        },\n      };\n    },\n  },\n};\n\nexport default NextAuth(authOptions);\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,cAA+B;IAC1C,SAAS,CAAA,GAAA,oKAAA,CAAA,gBAAa,AAAD,EAAE,gHAAA,CAAA,KAAE;IACzB,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,SAAS;QACP,UAAU;IACZ;IACA,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,UAAU;oBACR,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,OAAO;oBACL,OAAO;oBACP,MAAM;oBACN,aAAa;gBACf;gBACA,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,OAAO;gBACT;gBAEA,MAAM,eAAe,MAAM,gHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC5C,OAAO;wBAAE,OAAO,aAAa;oBAAM;gBACrC;gBAEA,IAAI,CAAC,cAAc;oBACjB,OAAO;gBACT;gBAEA,MAAM,gBAAgB,MAAM,CAAA,GAAA,qGAAA,CAAA,UAAO,AAAD,EAChC,YAAY,QAAQ,EACpB,aAAa,QAAQ;gBAGvB,IAAI,CAAC,eAAe;oBAClB,OAAO;gBACT;gBAEA,OAAO;oBACL,IAAI,GAAG,aAAa,EAAE,EAAE;oBACxB,UAAU,aAAa,QAAQ;oBAC/B,OAAO,aAAa,KAAK;gBAC3B;YACF;QACF;QACA,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;YAC9C,MAAM,SAAQ,OAAY;gBACxB,MAAM,iBAAiB,MAAM,CAAA,GAAA,qGAAA,CAAA,OAAI,AAAD,EAC9B,uCACA;gBAGF,uCAAuC;gBACvC,MAAM,eAAe,MAAM,gHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC5C,OAAO;wBAAE,OAAO,QAAQ,KAAK;oBAAC;gBAChC;gBAEA,IAAI,CAAC,cAAc;oBACjB,2CAA2C;oBAC3C,MAAM,UAAU,MAAM,gHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;wBACnC,MAAM;4BACJ,OAAO,QAAQ,KAAK;4BACpB,UAAU,QAAQ,IAAI,IAAI;4BAC1B,UAAU,QAAQ,GAAG;4BACrB,UAAU;wBACZ;oBACF;oBAEA,2DAA2D;oBAC3D,OAAO;wBACL,IAAI,QAAQ,EAAE,CAAC,QAAQ;wBACvB,MAAM,QAAQ,QAAQ;wBACtB,OAAO,QAAQ,KAAK;wBACpB,UAAU,QAAQ,QAAQ;oBAC5B;gBACF;gBAEA,yCAAyC;gBACzC,OAAO;oBACL,IAAI,aAAa,EAAE,CAAC,QAAQ;oBAC5B,MAAM,aAAa,QAAQ;oBAC3B,OAAO,aAAa,KAAK;oBACzB,UAAU,aAAa,QAAQ;gBACjC;YACF;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,OAAO;oBACL,GAAG,KAAK;oBACR,UAAU,KAAK,QAAQ;gBACzB;YACF;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,OAAO;gBACL,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,UAAU,MAAM,QAAQ;gBAE1B;YACF;QACF;IACF;AACF;uCAEe,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/UserAcauntNav.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/UserAcauntNav.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/UserAcauntNav.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/UserAcauntNav.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/UserAcauntNav.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/UserAcauntNav.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/SubSidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SubSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubSidebar() from the server but SubSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/SubSidebar.tsx <module evaluation>\",\n    \"SubSidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,+DACA"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/SubSidebar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SubSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call SubSidebar() from the server but SubSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/SubSidebar.tsx\",\n    \"SubSidebar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2CACA"}},
    {"offset": {"line": 390, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/Sidebar.tsx"],"sourcesContent":["import Link from \"next/link\";\n\nimport { buttonVariants } from \"./ui/button\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/auth\";\nimport UserAccountNav from \"./UserAcauntNav\";\nimport { SubSidebar } from \"./SubSidebar\";\n\nconst Sidebar = async () => {\n  const session = await getServerSession(authOptions);\n\n  return (\n    <div className=\"w-64 bg-white h-screen border-r border-gray-200 fixed left-0 top-0\">\n      <div className=\"p-6\">\n        <h1 className=\"text-2xl font-bold text-indigo-600\">SocialHub</h1>\n      </div>\n      <nav className=\"mt-6\">\n        <SubSidebar />\n\n        <div className=\"mt-6 px-6 \">\n          {session?.user ? (\n            <div className=\"flex flex-col gap-4\">\n              <Link href=\"/profile\">Profile</Link>\n              <UserAccountNav />\n            </div>\n          ) : (\n            <Link className={buttonVariants()} href=\"/sign-in\">\n              Sign in\n            </Link>\n          )}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,UAAU;IACd,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,kHAAA,CAAA,cAAW;IAElD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAqC;;;;;;;;;;;0BAErD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gIAAA,CAAA,aAAU;;;;;kCAEX,8OAAC;wBAAI,WAAU;kCACZ,SAAS,qBACR,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAW;;;;;;8CACtB,8OAAC,mIAAA,CAAA,UAAc;;;;;;;;;;iDAGjB,8OAAC,4JAAA,CAAA,UAAI;4BAAC,WAAW,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD;4BAAK,MAAK;sCAAW;;;;;;;;;;;;;;;;;;;;;;;AAQ/D;uCAEe"}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/provider.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/provider.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/provider.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,kCACA"}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA"}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/Proveder.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Proveder = registerClientReference(\n    function() { throw new Error(\"Attempted to call Proveder() from the server but Proveder is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Proveder.tsx <module evaluation>\",\n    \"Proveder\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6DACA"}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/Proveder.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Proveder = registerClientReference(\n    function() { throw new Error(\"Attempted to call Proveder() from the server but Proveder is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Proveder.tsx\",\n    \"Proveder\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yCACA"}},
    {"offset": {"line": 606, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/layout.tsx"],"sourcesContent":["import type { Metadata, Viewport } from \"next\";\nimport \"./globals.css\";\nimport Sidebar from \"@/components/Sidebar\";\nimport Provider from \"./provider\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { Proveder } from \"@/components/Proveder\";\n\nexport const viewport: Viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n  themeColor: \"#FFFFFF\",\n  colorScheme: \"light\",\n};\n\nexport const metadata: Metadata = {\n  title: \"SocialHub\",\n  description: \"Automation\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Proveder>\n          <Provider>\n            <Sidebar />\n            {children}\n            <Toaster />\n          </Provider>\n        </Proveder>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;IACd,YAAY;IACZ,aAAa;AACf;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,8HAAA,CAAA,WAAQ;0BACP,cAAA,8OAAC,uHAAA,CAAA,UAAQ;;sCACP,8OAAC,6HAAA,CAAA,UAAO;;;;;wBACP;sCACD,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;;;;;AAMpB"}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}