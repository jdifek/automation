{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/provider.tsx"],"sourcesContent":["\"use client\"\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { PropsWithChildren } from \"react\";\nimport toast from \"react-hot-toast\";\n\nconst Provider: React.FC<PropsWithChildren> = ({ children }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      mutations: { onError: (err) => toast.error(err.message) },\n    },\n  });\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\nexport default Provider;\n"],"names":[],"mappings":";;;;AAIA;AAFA;AAAA;AAFA;;;;AAMA,MAAM,WAAwC,CAAC,EAAE,QAAQ,EAAE;IACzD,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW,CAAC;QAClC,gBAAgB;YACd,WAAW;gBAAE,SAAS,CAAC,MAAQ,uJAAA,CAAA,UAAK,CAAC,KAAK,CAAC,IAAI,OAAO;YAAE;QAC1D;IACF;IACA,qBACE,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/utils/supabase/client.ts"],"sourcesContent":["'use client'\nimport { createBrowserClient } from '@supabase/ssr'\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  )\n}\n\n\n"],"names":[],"mappings":";;;AACA;AAAA;AADA;;AAGO,SAAS;IACd,OAAO,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD;AAI3B"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/login/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\nimport { createClient } from \"@/utils/supabase/server\";\n\nexport async function login(formData: FormData) {\n  const supabase = await createClient();\n\n  // type-casting here for convenience\n  // in practice, you should validate your inputs\n  const data = {\n    email: formData.get(\"email\") as string,\n    password: formData.get(\"password\") as string,\n  };\n\n  const { error } = await supabase.auth.signInWithPassword(data);\n\n  if (error) {\n    redirect(\"/error\");\n  }\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/\");\n}\n\nexport async function signup(formData: FormData) {\n  const supabase = await createClient();\n\n  // type-casting here for convenience\n  // in practice, you should validate your inputs\n  const data = {\n    email: formData.get(\"email\") as string,\n    password: formData.get(\"password\") as string,\n  };\n\n  const { error } = await supabase.auth.signUp(data);\n\n  if (error) {\n    redirect(\"/error\");\n  }\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/\");\n}\n\nconst signInWith = (provider: \"google\") => async () => {\n  const supabase = await createClient();\n\n  const auth_callback_url = `${process.env.SITE_URL}/auth/callback`;\n\n  const { data, error } = await supabase.auth.signInWithOAuth({\n    provider,\n    options: {\n      redirectTo: auth_callback_url,\n    },\n  });\n\n  console.log(data);\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data.url !== null) {\n    redirect(data.url);\n  }\n};\n\nexport const signinWithGoogle = signInWith(\"google\");\n"],"names":[],"mappings":";;;;;;;IAOsB;IAoBA;IA2CT"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/components/auth.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { login, signinWithGoogle, signup } from \"@/app/login/actions\"; \n\nconst formSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  confirmPassword: z.string(),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords must match\",\n  path: [\"confirmPassword\"],\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function RegisterForm() {\n  const {\n    register,\n    formState: { errors },\n  } = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n  });\n\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n      <form\n        className=\"w-full max-w-md p-6 bg-white shadow-md rounded-md\"\n      >\n        <h2 className=\"text-2xl font-bold text-center mb-6\">Register</h2>\n\n        {/* Email Field */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            {...register(\"email\")}\n            className={`mt-1 w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n              errors.email ? \"border-red-500 focus:ring-red-500\" : \"focus:ring-blue-500\"\n            }`}\n          />\n          {errors.email && (\n            <p className=\"mt-1 text-sm text-red-500\">{errors.email.message}</p>\n          )}\n        </div>\n\n        {/* Password Field */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n            Password\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            {...register(\"password\")}\n            className={`mt-1 w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n              errors.password ? \"border-red-500 focus:ring-red-500\" : \"focus:ring-blue-500\"\n            }`}\n          />\n          {errors.password && (\n            <p className=\"mt-1 text-sm text-red-500\">{errors.password.message}</p>\n          )}\n        </div>\n\n       \n        <button\n          type=\"submit\"\n          className=\"w-full py-2 px-4 text-white bg-blue-500 mb-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          formAction={login}\n        >\n           Login\n        </button>\n        <button\n          type=\"submit\"\n          className=\"w-full py-2 px-4 text-white bg-blue-500 mb-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          formAction={signup}\n        >\n           Sign in\n        </button>\n        <button\n          type=\"submit\"\n          className=\"w-full py-2 px-4 text-white bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          formAction={signinWithGoogle}\n        >\n           Google\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAKA;AACA;AAFA;AADA;AAHA;;;;;;AAQA,MAAM,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,iBAAiB,oIAAA,CAAA,IAAC,CAAC,MAAM;AAC3B,GAAG,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IAC1D,SAAS;IACT,MAAM;QAAC;KAAkB;AAC3B;AAIe,SAAS;IACtB,MAAM,EACJ,QAAQ,EACR,WAAW,EAAE,MAAM,EAAE,EACtB,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAc;QACtB,UAAU,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE;IACxB;IAGA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,WAAU;;8BAEV,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;8BAGpD,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,SAAQ;4BAAQ,WAAU;sCAA0C;;;;;;sCAG3E,8OAAC;4BACC,IAAG;4BACH,MAAK;4BACJ,GAAG,SAAS,QAAQ;4BACrB,WAAW,CAAC,wEAAwE,EAClF,OAAO,KAAK,GAAG,sCAAsC,uBACrD;;;;;;wBAEH,OAAO,KAAK,kBACX,8OAAC;4BAAE,WAAU;sCAA6B,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;8BAKlE,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAM,SAAQ;4BAAW,WAAU;sCAA0C;;;;;;sCAG9E,8OAAC;4BACC,IAAG;4BACH,MAAK;4BACJ,GAAG,SAAS,WAAW;4BACxB,WAAW,CAAC,wEAAwE,EAClF,OAAO,QAAQ,GAAG,sCAAsC,uBACxD;;;;;;wBAEH,OAAO,QAAQ,kBACd,8OAAC;4BAAE,WAAU;sCAA6B,OAAO,QAAQ,CAAC,OAAO;;;;;;;;;;;;8BAKrE,8OAAC;oBACC,MAAK;oBACL,WAAU;oBACV,YAAY,8HAAA,CAAA,QAAK;8BAClB;;;;;;8BAGD,8OAAC;oBACC,MAAK;oBACL,WAAU;oBACV,YAAY,8HAAA,CAAA,SAAM;8BACnB;;;;;;8BAGD,8OAAC;oBACC,MAAK;oBACL,WAAU;oBACV,YAAY,8HAAA,CAAA,mBAAgB;8BAC7B;;;;;;;;;;;;;;;;;AAMT"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/layoutWrapper.tsx"],"sourcesContent":["\"use client\";\nimport { createClient } from \"@/utils/supabase/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\"; // Використовуємо API для навігації\nimport RegisterForm from \"@/components/auth\";\nimport Sidebar from \"@/components/Sidebar\";\n\nfunction Wrapper({ children }: { children: React.ReactNode }) {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter(); // Хук для редиректу\n\n  useEffect(() => {\n    const getSession = async () => {\n      const supabase = createClient();\n      try {\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n\n        if (session) {\n          setAuthenticated(true);\n        } else {\n          setAuthenticated(false);\n          router.push(\"/auth\"); // Редирект на сторінку логіну\n        }\n      } catch (error) {\n        console.error(\"Error fetching session:\", error);\n        setAuthenticated(false);\n        router.push(\"/auth\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSession();\n  }, [router]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!authenticated) {\n    return <RegisterForm />;\n  }\n\n  return <> <Sidenar/> {children}</>;\n}\n\nexport default Wrapper;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,mOAA6C,mCAAmC;AAChF;AAJA;;;;;;AAOA,SAAS,QAAQ,EAAE,QAAQ,EAAiC;IAC1D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAK,oBAAoB;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa;YACjB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;YAC5B,IAAI;gBACF,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;gBAElC,IAAI,SAAS;oBACX,iBAAiB;gBACnB,OAAO;oBACL,iBAAiB;oBACjB,OAAO,IAAI,CAAC,UAAU,8BAA8B;gBACtD;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;gBACzC,iBAAiB;gBACjB,OAAO,IAAI,CAAC;YACd,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,IAAI,CAAC,eAAe;QAClB,qBAAO,8OAAC,0HAAA,CAAA,UAAY;;;;;IACtB;IAEA,qBAAO;;YAAE;0BAAC,8OAAC;;;;;YAAS;YAAE;;;AACxB;uCAEe"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}