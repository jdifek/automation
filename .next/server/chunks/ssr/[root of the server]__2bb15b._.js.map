{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/services/apiServise.ts"],"sourcesContent":["import axios from 'axios';\n\nconst DEFAULT_HEADER = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n};\n\nexport const fetchData = async <T, D = unknown>(\n  url: string,\n  method: string,\n  data?: D,\n  headers = DEFAULT_HEADER\n): Promise<T> => {\n  try {\n    const response = await axios({\n      url,\n      method,\n      headers,\n      data\n    });\n\n    if (response.status >= 200 && response.status < 300) {\n      return response.data;\n    } else {\n      throw new Error(\"Network response was not ok\");\n    }\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB;IACrB,gBAAgB;AAClB;AAEO,MAAM,YAAY,OACvB,KACA,QACA,MACA,UAAU,cAAc;IAExB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE;YAC3B;YACA;YACA;YACA;QACF;QAEA,IAAI,SAAS,MAAM,IAAI,OAAO,SAAS,MAAM,GAAG,KAAK;YACnD,OAAO,SAAS,IAAI;QACtB,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,MAAM;IACR;AACF"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/services/telegram.service.ts"],"sourcesContent":["import axios from \"axios\";\n\nexport const telegramService = {\n  async sendMessage(text: string) {\n    return await axios.post(\n      `https://api.telegram.org/bot${process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN}/sendMessage`,\n      {\n        text,\n        parse_mode: \"MarkdownV2\",\n        chat_id: \"-1002453211834\",\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n  },\n\n};\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,kBAAkB;IAC7B,MAAM,aAAY,IAAY;QAC5B,OAAO,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CACrB,CAAC,4BAA4B,qFAA6C,YAAY,CAAC,EACvF;YACE;YACA,YAAY;YACZ,SAAS;QACX,GACA;YAAE,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEtD;AAEF"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/hooks/useTelegram.ts"],"sourcesContent":["import { useMutation } from \"@tanstack/react-query\";\nimport { telegramService } from \"@/services/telegram.service\";\n\nexport function useSendMessage() {\n  return useMutation({\n    mutationKey: [\"send message\"],\n    mutationFn: async (text: string) => {\n      const escapeMarkdown = (text: string): string => {\n        return text.replace(/([_[\\]()~`>#+=|{}.!-])/g, \"\\\\$1\");\n      };\n\n      const res = await telegramService.sendMessage(escapeMarkdown(text));\n      if (res.status !== 200) throw new Error(res.data);\n    },\n  });\n}\n\n\n\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,SAAS;IACd,OAAO,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACjB,aAAa;YAAC;SAAe;QAC7B,YAAY,OAAO;YACjB,MAAM,iBAAiB,CAAC;gBACtB,OAAO,KAAK,OAAO,CAAC,2BAA2B;YACjD;YAEA,MAAM,MAAM,MAAM,sIAAA,CAAA,kBAAe,CAAC,WAAW,CAAC,eAAe;YAC7D,IAAI,IAAI,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM,IAAI,IAAI;QAClD;IACF;AACF"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/PostManager.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchData } from \"@/services/apiServise\";\nimport { Hammer, LucideIcon } from \"lucide-react\";\nimport { useSendMessage } from \"@/hooks/useTelegram\";\n\nconst utilFunction = (text: string): { text: string; confidence: number } => {\n  const confidenceRegex =\n    /\\[?\\s*(Confidence[:\\s]*\\d+%?|Confidence level[:\\s]*\\d+%?|(\\d+)%?)\\s*\\]?/i;\n  const match = text.match(confidenceRegex);\n  const confidencePercentage = match\n    ? parseInt(match[2] || match[1].match(/\\d+/)?.[0] || \"100\", 10)\n    : 100;\n\n  const cleanedText = text\n    .replace(/^Generated post:\\s*/i, \"\")\n    .replace(confidenceRegex, \"\")\n    .trim();\n\n  return {\n    text: cleanedText,\n    confidence: confidencePercentage,\n  };\n};\n\ninterface PostManagerProps {\n  platformName: string;\n  PublishIcon: LucideIcon;\n}\n\nconst PostManager: React.FC<PostManagerProps> = ({\n  platformName,\n  PublishIcon,\n}) => {\n  const [receivedAnswer, setReceivedAnswer] = useState(\"\");\n  const [request, setRequest] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [intervalId, setIntervalId] = useState<number | null>(null);\n  const [interval, setInterval] = useState(0.01);\n  const [posts, setPosts] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false); // Added loading state\n\n  const { mutate: sendMessage } = useSendMessage();\n\n  useEffect(() => {\n    const savedPosts = localStorage.getItem(\"posts\");\n    if (savedPosts) {\n      setPosts(JSON.parse(savedPosts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n  const handleAdd = async () => {\n    const fullRequest = `You will be creating posts for Telegram channels. Help me with this. Here is a description of what the post should be like:\n\n                          Here are the previous posts:\n                          ${posts}. \n                         \n                          ${\n                            isChecked\n                              ? \"Based on the content above, generate something new and unique that is related, yet fresh and engaging.\"\n                              : `Now, here\"s the description for the new post: ${request}.`\n                          }\n\n                          Also add the confidence in how well the request is put so that it could be used to create a post in TG, in percentage terms by type [80%];\n                                     **Response format:**  \n                          Generated post (the content itself).\n\n                          [10%] - for instance\n                          \n                          Please make sure your response follows this format clearly.`;\n\n    try {\n      setLoading(true); // Set loading to true\n      const data = await fetchData<{ answer: string }>(\n        \"/api/get-answer\",\n        \"POST\",\n        { question: fullRequest }\n      );\n      setReceivedAnswer(data.answer);\n    } catch (error) {\n      setReceivedAnswer(\"Error getting answer. Please try again.\");\n    } finally {\n      setLoading(false); \n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!receivedAnswer.trim()) {\n      console.error(\"No answer received. Cannot send an empty message.\");\n      return;\n    }\n\n    if (isChecked) {\n      handleAdd();\n    }\n\n    const parsedAnswer = utilFunction(receivedAnswer);\n\n    if (parsedAnswer.confidence >= 80) {\n      try {\n        sendMessage(parsedAnswer.text);\n        setPosts((prevPosts) => [...prevPosts, parsedAnswer.text]);\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    } else {\n      console.warn(\n        `Confidence too low (${parsedAnswer.confidence}%). Message not sent.`\n      );\n    }\n  };\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  const hours = Array.from({ length: 24 }, (_, i) => i + 1);\n\n  const handleIntervalChange = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setInterval(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    if (isChecked && interval > 0) {\n      const id = window.setInterval(() => {\n        if (receivedAnswer.trim()) {\n          handleSendMessage();\n        }\n      }, interval * 3600000);\n      setIntervalId(id);\n    } else if (!isChecked && intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isChecked, interval, receivedAnswer]);\n\n  return (\n    <>\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Create</h2>\n\n        <div className=\"mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n            <input\n              type=\"text\"\n              value={request}\n              onChange={(e) => setRequest(e.target.value)}\n              placeholder=\"Trigger keyword\"\n              className=\"p-2 border border-gray-300 rounded-lg md:col-span-2\"\n            />\n            <button\n              onClick={() => {\n                handleAdd(), setRequest(\"\");\n              }}\n              className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n            >\n              <Hammer className=\"w-5 h-5 mr-2\" />\n              Create\n            </button>\n            <button\n              onClick={handleSendMessage}\n              className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n            >\n              <PublishIcon className=\"w-5 h-5 mr-2\" />\n              Public on {platformName}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {loading && (\n        <div className=\"flex justify-center my-4\">\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\" role=\"status\">\n            <span className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\">\n              Loading...\n            </span>\n          </div>\n        </div>\n      )}\n\n      {receivedAnswer && !loading && (\n        <div className=\"bg-white rounded-lg shadow p-6 mt-3\">\n          <div className=\"space-y-4 flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n            {utilFunction(receivedAnswer).text}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between w-full bg-gray-100 mt-6\">\n        <div className=\"w-1/2 bg-white rounded-lg shadow p-6\">\n          <label className=\"flex items-center space-x-3 mb-4\">\n            <input\n              type=\"checkbox\"\n              className=\"form-checkbox h-5 w-5 text-blue-600\"\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n            <span className=\"text-gray-700\">Auto posts</span>\n          </label>\n\n          <div className=\"flex flex-col space-y-2\">\n            <label htmlFor=\"time-interval\" className=\"text-gray-700\">\n              Select Time Interval (hours):\n            </label>\n            <select\n              id=\"time-interval\"\n              className=\"form-select mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              value={interval}\n              onChange={handleIntervalChange}\n            >\n              {hours.map((hour) => (\n                <option key={hour} value={hour}>\n                  {hour} {hour === 1 ? \"hour\" : \"hours\"}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostManager;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/InstagramPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Instagram } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\n\nconst InstagramPostManager = () => {\n  return (\n    <PostManager\n      platformName=\"Instagram\"\n      PublishIcon={Instagram}\n    />\n  );\n};\n\nexport default InstagramPostManager"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAKA,MAAM,uBAAuB;IAC3B,qBACE,8OAAC,mKAAA,CAAA,UAAW;QACV,cAAa;QACb,aAAa,4MAAA,CAAA,YAAS;;;;;;AAG5B;uCAEe"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/TelegramPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Send } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n// import CheckboxWithImage from \"../checkbox\";\n\nconst TelegramPostManager = () => {\n  return (\n    <>\n      <PostManager platformName=\"Telegram\" PublishIcon={Send} />\n      {/* <CheckboxWithImage\n        label=\"Subscribe to channel\"\n        imageUrl=\"/path/to/image.jpg\"\n      // checked={checked}\n        // onChange={handleCheckboxChange}\n      />\n      <div className=\"telegram-messages\">\n        {messages.map((msg, index) => (\n          <div key={index}>{msg.message.text}</div>\n        ))}\n      </div> */}\n    </>\n  );\n};\n\nexport default TelegramPostManager;\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAGA,+CAA+C;AAE/C,MAAM,sBAAsB;IAC1B,qBACE;kBACE,cAAA,8OAAC,mKAAA,CAAA,UAAW;YAAC,cAAa;YAAW,aAAa,kMAAA,CAAA,OAAI;;;;;;;AAc5D;uCAEe"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/TikTokPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Video } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\n\nconst TikTokPostManager = () => {\n  return (\n    <PostManager\n      platformName=\"TikTok\"\n      PublishIcon={Video}\n    />\n  );\n};\n\nexport default TikTokPostManager"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAKA,MAAM,oBAAoB;IACxB,qBACE,8OAAC,mKAAA,CAAA,UAAW;QACV,cAAa;QACb,aAAa,oMAAA,CAAA,QAAK;;;;;;AAGxB;uCAEe"}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/FacebookPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Facebook } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\nconst FacebookPostManager = () => {\n  return <PostManager platformName=\"Facebook\" PublishIcon={Facebook} />;\n};\n\nexport default FacebookPostManager;\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIA,MAAM,sBAAsB;IAC1B,qBAAO,8OAAC,mKAAA,CAAA,UAAW;QAAC,cAAa;QAAW,aAAa,0MAAA,CAAA,WAAQ;;;;;;AACnE;uCAEe"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}