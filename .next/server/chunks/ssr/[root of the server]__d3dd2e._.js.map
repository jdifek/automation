{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/auth/page.tsx"],"sourcesContent":["// \"use client\"\n\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { z } from \"zod\";\n// import { zodResolver } from \"@hookform/resolvers/zod\";\n// import { login, signinWithGoogle, signup } from \"../login/actions\";\n\n// const formSchema = z.object({\n//   email: z.string().email(\"Invalid email address\"),\n//   password: z.string().min(6, \"Password must be at least 6 characters\"),\n//   confirmPassword: z.string(),\n// }).refine((data) => data.password === data.confirmPassword, {\n//   message: \"Passwords must match\",\n//   path: [\"confirmPassword\"],\n// });\n\n// type FormValues = z.infer<typeof formSchema>;\n\n// export default function RegisterForm() {\n//   const {\n//     register,\n//     formState: { errors },\n//   } = useForm<FormValues>({\n//     resolver: zodResolver(formSchema),\n//   });\n\n\n//   return (\n//     <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\n//       <form\n//         className=\"w-full max-w-md p-6 bg-white shadow-md rounded-md\"\n//       >\n//         <h2 className=\"text-2xl font-bold text-center mb-6\">Register</h2>\n\n//         {/* Email Field */}\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n//             Email\n//           </label>\n//           <input\n//             id=\"email\"\n//             type=\"email\"\n//             {...register(\"email\")}\n//             className={`mt-1 w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n//               errors.email ? \"border-red-500 focus:ring-red-500\" : \"focus:ring-blue-500\"\n//             }`}\n//           />\n//           {errors.email && (\n//             <p className=\"mt-1 text-sm text-red-500\">{errors.email.message}</p>\n//           )}\n//         </div>\n\n//         {/* Password Field */}\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n//             Password\n//           </label>\n//           <input\n//             id=\"password\"\n//             type=\"password\"\n//             {...register(\"password\")}\n//             className={`mt-1 w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n//               errors.password ? \"border-red-500 focus:ring-red-500\" : \"focus:ring-blue-500\"\n//             }`}\n//           />\n//           {errors.password && (\n//             <p className=\"mt-1 text-sm text-red-500\">{errors.password.message}</p>\n//           )}\n//         </div>\n\n       \n//         <button\n//           type=\"submit\"\n//           className=\"w-full py-2 px-4 text-white bg-blue-500 mb-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           formAction={login}\n//         >\n//            Login\n//         </button>\n//         <button\n//           type=\"submit\"\n//           className=\"w-full py-2 px-4 text-white bg-blue-500 mb-2 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           formAction={signup}\n//         >\n//            Sign in\n//         </button>\n//         <button\n//           type=\"submit\"\n//           className=\"w-full py-2 px-4 text-white bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           formAction={signinWithGoogle}\n//         >\n//            Google\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n"],"names":[],"mappings":"AAAA,eAAe;AAEf,6BAA6B;AAC7B,6CAA6C;AAC7C,2BAA2B;AAC3B,yDAAyD;AACzD,sEAAsE;AAEtE,gCAAgC;AAChC,sDAAsD;AACtD,2EAA2E;AAC3E,iCAAiC;AACjC,gEAAgE;AAChE,qCAAqC;AACrC,+BAA+B;AAC/B,MAAM;AAEN,gDAAgD;AAEhD,2CAA2C;AAC3C,YAAY;AACZ,gBAAgB;AAChB,6BAA6B;AAC7B,8BAA8B;AAC9B,yCAAyC;AACzC,QAAQ;AAGR,aAAa;AACb,2FAA2F;AAC3F,cAAc;AACd,wEAAwE;AACxE,UAAU;AACV,4EAA4E;AAE5E,8BAA8B;AAC9B,iCAAiC;AACjC,wFAAwF;AACxF,oBAAoB;AACpB,qBAAqB;AACrB,mBAAmB;AACnB,yBAAyB;AACzB,2BAA2B;AAC3B,qCAAqC;AACrC,qGAAqG;AACrG,2FAA2F;AAC3F,kBAAkB;AAClB,eAAe;AACf,+BAA+B;AAC/B,kFAAkF;AAClF,eAAe;AACf,iBAAiB;AAEjB,iCAAiC;AACjC,iCAAiC;AACjC,2FAA2F;AAC3F,uBAAuB;AACvB,qBAAqB;AACrB,mBAAmB;AACnB,4BAA4B;AAC5B,8BAA8B;AAC9B,wCAAwC;AACxC,qGAAqG;AACrG,8FAA8F;AAC9F,kBAAkB;AAClB,eAAe;AACf,kCAAkC;AAClC,qFAAqF;AACrF,eAAe;AACf,iBAAiB;AAGjB,kBAAkB;AAClB,0BAA0B;AAC1B,sJAAsJ;AACtJ,+BAA+B;AAC/B,YAAY;AACZ,mBAAmB;AACnB,oBAAoB;AACpB,kBAAkB;AAClB,0BAA0B;AAC1B,sJAAsJ;AACtJ,gCAAgC;AAChC,YAAY;AACZ,qBAAqB;AACrB,oBAAoB;AACpB,kBAAkB;AAClB,0BAA0B;AAC1B,iJAAiJ;AACjJ,0CAA0C;AAC1C,YAAY;AACZ,oBAAoB;AACpB,oBAAoB;AACpB,gBAAgB;AAChB,aAAa;AACb,OAAO;AACP,IAAI"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/utils/supabase/server.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr'\nimport { cookies } from 'next/headers'\n\nexport async function createClient() {\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/logaut/actions.ts"],"sourcesContent":["\"use server\"\nimport { createClient } from '@/utils/supabase/server'\nimport { revalidatePath } from 'next/cache'\nimport { redirect } from 'next/navigation'\n\nexport async function logout() {\n  const supabase = await createClient()\n\n  const { error } = await supabase.auth.signOut()\n\n  if (error) {\n    redirect('/error')\n  }\n\n  revalidatePath('/', 'layout')\n  redirect('/')\n}"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;AAAA;;;;;;AAEO,eAAe,uCAAI,GAAJ;IACpB,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAElC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IAE7C,IAAI,OAAO;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IAXsB;;AAAA,+OAAA"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/login/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\nimport { createClient } from \"@/utils/supabase/server\";\n\nexport async function login(formData: FormData) {\n  const supabase = await createClient();\n\n  // type-casting here for convenience\n  // in practice, you should validate your inputs\n  const data = {\n    email: formData.get(\"email\") as string,\n    password: formData.get(\"password\") as string,\n  };\n\n  const { error } = await supabase.auth.signInWithPassword(data);\n\n  if (error) {\n    redirect(\"/error\");\n  }\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/\");\n}\n\nexport async function signup(formData: FormData) {\n  const supabase = await createClient();\n\n  // type-casting here for convenience\n  // in practice, you should validate your inputs\n  const data = {\n    email: formData.get(\"email\") as string,\n    password: formData.get(\"password\") as string,\n  };\n\n  const { error } = await supabase.auth.signUp(data);\n\n  if (error) {\n    redirect(\"/error\");\n  }\n\n  revalidatePath(\"/\", \"layout\");\n  redirect(\"/\");\n}\n\nconst signInWith = (provider: \"google\") => async () => {\n  const supabase = await createClient();\n\n  const auth_callback_url = `${process.env.SITE_URL}/auth/callback`;\n\n  const { data, error } = await supabase.auth.signInWithOAuth({\n    provider,\n    options: {\n      redirectTo: auth_callback_url,\n    },\n  });\n\n  console.log(data);\n\n  if (error) {\n    console.log(error);\n  }\n\n  if (data.url !== null) {\n    redirect(data.url);\n  }\n};\n\nexport const signinWithGoogle = signInWith(\"google\");\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;;AAFA;;;;;;AAIO,eAAe,uCAAG,GAAH,MAAM,QAAkB;IAC5C,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAElC,oCAAoC;IACpC,+CAA+C;IAC/C,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;IAEzD,IAAI,OAAO;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEO,eAAe,uCAAI,GAAJ,OAAO,QAAkB;IAC7C,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;IAElC,oCAAoC;IACpC,+CAA+C;IAC/C,MAAM,OAAO;QACX,OAAO,SAAS,GAAG,CAAC;QACpB,UAAU,SAAS,GAAG,CAAC;IACzB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;IAE7C,IAAI,OAAO;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,KAAK;IACpB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;AAEA,MAAM,aAAa,CAAC,WAAuB;QACzC,MAAM,WAAW,MAAM,CAAA,GAAA,kIAAA,CAAA,eAAY,AAAD;QAElC,MAAM,oBAAoB,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC;QAEjE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,eAAe,CAAC;YAC1D;YACA,SAAS;gBACP,YAAY;YACd;QACF;QAEA,QAAQ,GAAG,CAAC;QAEZ,IAAI,OAAO;YACT,QAAQ,GAAG,CAAC;QACd;QAEA,IAAI,KAAK,GAAG,KAAK,MAAM;YACrB,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,GAAG;QACnB;IACF;AAEO,MAAM,uCAAc,GAAd,mBAAmB,WAAW;;;IA/DrB;IAoBA;IA2CT;;AA/DS,+OAAA;AAoBA,+OAAA;AA2CT,+OAAA"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}