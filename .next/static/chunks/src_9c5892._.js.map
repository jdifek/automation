{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/provider.tsx"],"sourcesContent":["\"use client\"\n\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { PropsWithChildren } from \"react\";\nimport toast from \"react-hot-toast\";\n\nconst Provider: React.FC<PropsWithChildren> = ({ children }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      mutations: { onError: (err) => toast.error(err.message) },\n    },\n  });\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\nexport default Provider;\n"],"names":[],"mappings":";;;;AAIA;AAFA;AAAA;AAFA;;;;AAMA,MAAM,WAAwC,CAAC,EAAE,QAAQ,EAAE;IACzD,MAAM,cAAc,IAAI,gLAAA,CAAA,cAAW,CAAC;QAClC,gBAAgB;YACd,WAAW;gBAAE,SAAS,CAAC,MAAQ,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,IAAI,OAAO;YAAE;QAC1D;IACF;IACA,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;KATM;uCAWS"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/utils/supabase/client.ts"],"sourcesContent":["'use client'\nimport { createBrowserClient } from '@supabase/ssr'\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  )\n}\n\n\n"],"names":[],"mappings":";;;AACA;AAAA;AAII;AALJ;;AAGO,SAAS;IACd,OAAO,CAAA,GAAA,6KAAA,CAAA,sBAAmB,AAAD;AAI3B"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/it/Clix-Web/automation/src/app/layoutWrapper.tsx"],"sourcesContent":["\"use client\";\nimport { createClient } from \"@/utils/supabase/client\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\"; // Використовуємо API для навігації\n\nfunction Wrapper({ children }: { children: React.ReactNode }) {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter(); // Хук для редиректу\n\n  useEffect(() => {\n    const getSession = async () => {\n      const supabase = createClient();\n      try {\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n\n        if (session) {\n          setAuthenticated(true);\n        } else {\n          setAuthenticated(false);\n          router.push(\"/auth\"); // Редирект на сторінку логіну\n        }\n      } catch (error) {\n        console.error(\"Error fetching session:\", error);\n        setAuthenticated(false);\n        router.push(\"/auth\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSession();\n  }, [router]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!authenticated) {\n    return <div>1111</div>; \n  }\n\n  return <>{children}</>;\n}\n\nexport default Wrapper;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,yOAA6C,mCAAmC;;;AAHhF;;;;AAKA,SAAS,QAAQ,EAAE,QAAQ,EAAiC;;IAC1D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,oBAAoB;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM;gDAAa;oBACjB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,eAAY,AAAD;oBAC5B,IAAI;wBACF,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;wBAElC,IAAI,SAAS;4BACX,iBAAiB;wBACnB,OAAO;4BACL,iBAAiB;4BACjB,OAAO,IAAI,CAAC,UAAU,8BAA8B;wBACtD;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2BAA2B;wBACzC,iBAAiB;wBACjB,OAAO,IAAI,CAAC;oBACd,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;4BAAG;QAAC;KAAO;IAEX,IAAI,SAAS;QACX,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,IAAI,CAAC,eAAe;QAClB,qBAAO,6LAAC;sBAAI;;;;;;IACd;IAEA,qBAAO;kBAAG;;AACZ;GAxCS;;QAGQ,qIAAA,CAAA,YAAS;;;KAHjB;uCA0CM"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}