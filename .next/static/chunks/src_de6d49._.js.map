{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/services/telegram.service.ts"],"sourcesContent":["import axios from \"axios\";\n\nexport const telegramService = {\n  async sendMessage(text: string) {\n    return await axios.post(\n      `https://api.telegram.org/bot${process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN}/sendMessage`,\n      {\n        text,\n        parse_mode: \"MarkdownV2\",\n        chat_id: \"-1002453211834\",\n      },\n      { headers: { \"Content-Type\": \"application/json\" } }\n    );\n  },\n\n};\n"],"names":[],"mappings":";;;AAAA;AAKqC;;AAH9B,MAAM,kBAAkB;IAC7B,MAAM,aAAY,IAAY;QAC5B,OAAO,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CACrB,CAAC,4BAA4B,qFAA6C,YAAY,CAAC,EACvF;YACE;YACA,YAAY;YACZ,SAAS;QACX,GACA;YAAE,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEtD;AAEF"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/hooks/useTelegram.ts"],"sourcesContent":["import { useMutation } from \"@tanstack/react-query\";\nimport { telegramService } from \"@/services/telegram.service\";\n\nexport function useSendMessage() {\n  return useMutation({\n    mutationKey: [\"send message\"],\n    mutationFn: async (text: string) => {\n      const escapeMarkdown = (text: string): string => {\n        return text.replace(/([_[\\]()~`>#+=|{}.!-])/g, \"\\\\$1\");\n      };\n\n      const res = await telegramService.sendMessage(escapeMarkdown(text));\n      if (res.status !== 200) throw new Error(res.data);\n    },\n  });\n}\n\n\n\n"],"names":[],"mappings":";;;AACA;AADA;;;;AAGO,SAAS;;IACd,OAAO,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACjB,aAAa;YAAC;SAAe;QAC7B,UAAU;0CAAE,OAAO;gBACjB,MAAM;iEAAiB,CAAC;wBACtB,OAAO,KAAK,OAAO,CAAC,2BAA2B;oBACjD;;gBAEA,MAAM,MAAM,MAAM,yIAAA,CAAA,kBAAe,CAAC,WAAW,CAAC,eAAe;gBAC7D,IAAI,IAAI,MAAM,KAAK,KAAK,MAAM,IAAI,MAAM,IAAI,IAAI;YAClD;;IACF;AACF;GAZgB;;QACP,iLAAA,CAAA,cAAW"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/hooks/useSavedPosts.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport const useSavedPosts = () => {\n  const [posts, setPosts] = useState<string[]>([]);\n\n  useEffect(() => {\n    const savedPosts = localStorage.getItem(\"posts\");\n    if (savedPosts) {\n      setPosts(JSON.parse(savedPosts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"posts\", JSON.stringify(posts));\n  }, [posts]);\n\n  return [posts, setPosts] as const;\n};\n"],"names":[],"mappings":";;;AAAA;;;AAEO,MAAM,gBAAgB;;IAC3B,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACd,SAAS,KAAK,KAAK,CAAC;YACtB;QACF;kCAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,aAAa,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC;QAC/C;kCAAG;QAAC;KAAM;IAEV,OAAO;QAAC;QAAO;KAAS;AAC1B;GAfa"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/services/apiServise.ts"],"sourcesContent":["import axios from 'axios';\n\nconst DEFAULT_HEADER = {\n  \"Content-Type\": \"application/json; charset=utf-8\",\n};\n\nexport const fetchData = async <T, D = unknown>(\n  url: string,\n  method: string,\n  data?: D,\n  headers = DEFAULT_HEADER\n): Promise<T> => {\n  try {\n    const response = await axios({\n      url,\n      method,\n      headers,\n      data\n    });\n\n    if (response.status >= 200 && response.status < 300) {\n      return response.data;\n    } else {\n      throw new Error(\"Network response was not ok\");\n    }\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,iBAAiB;IACrB,gBAAgB;AAClB;AAEO,MAAM,YAAY,OACvB,KACA,QACA,MACA,UAAU,cAAc;IAExB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,wIAAA,CAAA,UAAK,AAAD,EAAE;YAC3B;YACA;YACA;YACA;QACF;QAEA,IAAI,SAAS,MAAM,IAAI,OAAO,SAAS,MAAM,GAAG,KAAK;YACnD,OAAO,SAAS,IAAI;QACtB,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,MAAM;IACR;AACF"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/hooks/usePostGeneration.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { fetchData } from \"@/services/apiServise\";\n\nexport const usePostGeneration = (posts: string[], isChecked: boolean, request: string) => {\n  const [receivedAnswer, setReceivedAnswer] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleAdd = async () => {\n    const fullRequest = `You will be creating posts for Telegram channels. Help me with this. Here is a description of what the post should be like:\n                          Here are the previous posts:\n                          ${posts}.\n                          ${isChecked ? \"Based on the content above, generate something new and unique that is related, yet fresh and engaging.\" : `Now, here's the description for the new post: ${request}.`}\n                          Also add the confidence in how well the request is put so that it could be used to create a post in TG, in percentage terms by type [80%];\n                          **Response format:**  \n                          Generated post (the content itself).\n                          [10%] - for instance`;\n\n    try {\n      setLoading(true);\n      const data = await fetchData<{ answer: string }>(\"/api/get-answer\", \"POST\", { question: fullRequest });\n      setReceivedAnswer(data.answer);\n    } catch (error) {\n      setReceivedAnswer(\"Error getting answer. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { receivedAnswer, loading, handleAdd };\n};\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEO,MAAM,oBAAoB,CAAC,OAAiB,WAAoB;;IACrE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,YAAY;QAChB,MAAM,cAAc,CAAC;;0BAEC,EAAE,MAAM;0BACR,EAAE,YAAY,2GAA2G,CAAC,8CAA8C,EAAE,QAAQ,CAAC,CAAC,CAAC;;;;8CAIjK,CAAC;QAE3C,IAAI;YACF,WAAW;YACX,MAAM,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD,EAAsB,mBAAmB,QAAQ;gBAAE,UAAU;YAAY;YACpG,kBAAkB,KAAK,MAAM;QAC/B,EAAE,OAAO,OAAO;YACd,kBAAkB;QACpB,SAAU;YACR,WAAW;QACb;IACF;IAEA,OAAO;QAAE;QAAgB;QAAS;IAAU;AAC9C;GA1Ba"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/hooks/useAutoPost.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useAutoPost = (isChecked: boolean, interval: number, receivedAnswer: string, handleSendMessage: () => void) => {\n  const [intervalId, setIntervalId] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (isChecked && interval > 0) {\n      const id = window.setInterval(() => {\n        if (receivedAnswer.trim()) {\n          handleSendMessage();\n        }\n      }, interval * 3600000);\n      setIntervalId(id);\n    } else if (!isChecked && intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isChecked, interval, receivedAnswer]);\n\n  return intervalId;\n};\n"],"names":[],"mappings":";;;AAAA;;;AAEO,MAAM,cAAc,CAAC,WAAoB,UAAkB,gBAAwB;;IACxF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,aAAa,WAAW,GAAG;gBAC7B,MAAM,KAAK,OAAO,WAAW;gDAAC;wBAC5B,IAAI,eAAe,IAAI,IAAI;4BACzB;wBACF;oBACF;+CAAG,WAAW;gBACd,cAAc;YAChB,OAAO,IAAI,CAAC,aAAa,YAAY;gBACnC,cAAc;gBACd,cAAc;YAChB;YAEA;yCAAO;oBACL,IAAI,YAAY;wBACd,cAAc;oBAChB;gBACF;;QACF;gCAAG;QAAC;QAAW;QAAU;KAAe;IAExC,OAAO;AACT;GAxBa"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/utils/utilFunction.ts"],"sourcesContent":["export const utilFunction = (text: string): { text: string; confidence: number } => {\n  const confidenceRegex =\n    /\\[?\\s*(Confidence[:\\s]*\\d+%?|Confidence level[:\\s]*\\d+%?|(\\d+)%?)\\s*\\]?/i;\n\n  const cleanedText = text.replace(/\\[.*?\\]/g, \"\").trim();\n\n  const match = cleanedText.match(confidenceRegex);\n  const confidencePercentage = match\n    ? parseInt(match[2] || match[1].match(/\\d+/)?.[0] || \"100\", 10)\n    : 100;\n\n \n  const finalText = cleanedText\n    .replace(/^Generated post:\\s*/i, \"\")\n    .replace(confidenceRegex, \"\")\n    .trim();\n\n  return {\n    text: finalText,\n    confidence: confidencePercentage,\n  };\n};\n"],"names":[],"mappings":";;;AAAO,MAAM,eAAe,CAAC;IAC3B,MAAM,kBACJ;IAEF,MAAM,cAAc,KAAK,OAAO,CAAC,YAAY,IAAI,IAAI;IAErD,MAAM,QAAQ,YAAY,KAAK,CAAC;IAChC,MAAM,uBAAuB,QACzB,SAAS,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,OAAO,MAC1D;IAGJ,MAAM,YAAY,YACf,OAAO,CAAC,wBAAwB,IAChC,OAAO,CAAC,iBAAiB,IACzB,IAAI;IAEP,OAAO;QACL,MAAM;QACN,YAAY;IACd;AACF"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/PostManager.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Hammer, LucideIcon } from \"lucide-react\";\nimport { useSendMessage } from \"@/hooks/useTelegram\";\nimport { useSavedPosts } from \"@/hooks/useSavedPosts\";\nimport { usePostGeneration } from \"@/hooks/usePostGeneration\";\nimport { useAutoPost } from \"@/hooks/useAutoPost\";\nimport { utilFunction } from \"@/utils/utilFunction\";\n\ninterface PostManagerProps {\n  platformName: string;\n  PublishIcon: LucideIcon;\n}\n\nconst PostManager: React.FC<PostManagerProps> = ({ platformName, PublishIcon }) => {\n  const [request, setRequest] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const [interval, setInterval] = useState(0.01);\n\n  const [posts, setPosts] = useSavedPosts();\n  const { receivedAnswer, loading, handleAdd } = usePostGeneration(posts, isChecked, request);\n  const { mutate: sendMessage } = useSendMessage();\n\n  const handleSendMessage = async () => {\n    if (!receivedAnswer.trim()) {\n      console.error(\"No answer received. Cannot send an empty message.\");\n      return;\n    }\n\n    if (isChecked) {\n      handleAdd();\n    }\n\n    const parsedAnswer = utilFunction(receivedAnswer);\n\n    if (parsedAnswer.confidence >= 80) {\n      try {\n        sendMessage(parsedAnswer.text);\n        setPosts((prevPosts) => [...prevPosts, parsedAnswer.text]);\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    } else {\n      console.warn(`Confidence too low (${parsedAnswer.confidence}%). Message not sent.`);\n    }\n  };\n\n  useAutoPost(isChecked, interval, receivedAnswer, handleSendMessage);\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsChecked(event.target.checked);\n  };\n\n  const hours = Array.from({ length: 24 }, (_, i) => i + 1);\n\n  const handleIntervalChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setInterval(Number(event.target.value));\n  };\n\n  return (\n    <>\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold mb-4\">Create</h2>\n        <div className=\"mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-4\">\n            <input\n              type=\"text\"\n              value={request}\n              onChange={(e) => setRequest(e.target.value)}\n              placeholder=\"Trigger keyword\"\n              className=\"p-2 border border-gray-300 rounded-lg md:col-span-2\"\n            />\n            <button\n              onClick={() => {\n                handleAdd(), setRequest(\"\");\n              }}\n              className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n            >\n              <Hammer className=\"w-5 h-5 mr-2\" />\n              Create\n            </button>\n            <button\n              onClick={handleSendMessage}\n              className=\"flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700\"\n            >\n              <PublishIcon className=\"w-5 h-5 mr-2\" />\n              Public on {platformName}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {loading && (\n        <div className=\"flex justify-center my-4\">\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\" role=\"status\">\n            <span className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\">\n              Loading...\n            </span>\n          </div>\n        </div>\n      )}\n\n      {receivedAnswer && !loading && (\n        <div className=\"bg-white rounded-lg shadow p-6 mt-3\">\n          <div className=\"space-y-4 flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\n            {utilFunction(receivedAnswer).text}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between w-full bg-gray-100 mt-6\">\n        <div className=\"w-1/2 bg-white rounded-lg shadow p-6\">\n          <label className=\"flex items-center space-x-3 mb-4\">\n            <input\n              type=\"checkbox\"\n              className=\"form-checkbox h-5 w-5 text-blue-600\"\n              checked={isChecked}\n              onChange={handleCheckboxChange}\n            />\n            <span className=\"text-gray-700\">Auto posts</span>\n          </label>\n\n          <div className=\"flex flex-col space-y-2\">\n            <label htmlFor=\"time-interval\" className=\"text-gray-700\">\n              Select Time Interval (hours):\n            </label>\n            <select\n              id=\"time-interval\"\n              className=\"form-select mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              value={interval}\n              onChange={handleIntervalChange}\n            >\n              {hours.map((hour) => (\n                <option key={hour} value={hour}>\n                  {hour} {hour === 1 ? \"hour\" : \"hours\"}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostManager;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/InstagramPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Instagram } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\n\nconst InstagramPostManager = () => {\n  return (\n    <PostManager\n      platformName=\"Instagram\"\n      PublishIcon={Instagram}\n    />\n  );\n};\n\nexport default InstagramPostManager"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAKA,MAAM,uBAAuB;IAC3B,qBACE,6LAAC,sKAAA,CAAA,UAAW;QACV,cAAa;QACb,aAAa,+MAAA,CAAA,YAAS;;;;;;AAG5B;KAPM;uCASS"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/TelegramPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Send } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n// import CheckboxWithImage from \"../checkbox\";\n\nconst TelegramPostManager = () => {\n  return (\n    <>\n      <PostManager platformName=\"Telegram\" PublishIcon={Send} />\n      {/* <CheckboxWithImage\n        label=\"Subscribe to channel\"\n        imageUrl=\"/path/to/image.jpg\"\n      // checked={checked}\n        // onChange={handleCheckboxChange}\n      />\n      <div className=\"telegram-messages\">\n        {messages.map((msg, index) => (\n          <div key={index}>{msg.message.text}</div>\n        ))}\n      </div> */}\n    </>\n  );\n};\n\nexport default TelegramPostManager;\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAGA,+CAA+C;AAE/C,MAAM,sBAAsB;IAC1B,qBACE;kBACE,cAAA,6LAAC,sKAAA,CAAA,UAAW;YAAC,cAAa;YAAW,aAAa,qMAAA,CAAA,OAAI;;;;;;;AAc5D;KAjBM;uCAmBS"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/TikTokPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Video } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\n\nconst TikTokPostManager = () => {\n  return (\n    <PostManager\n      platformName=\"TikTok\"\n      PublishIcon={Video}\n    />\n  );\n};\n\nexport default TikTokPostManager"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAKA,MAAM,oBAAoB;IACxB,qBACE,6LAAC,sKAAA,CAAA,UAAW;QACV,cAAa;QACb,aAAa,uMAAA,CAAA,QAAK;;;;;;AAGxB;KAPM;uCASS"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":["file:///Users/main/automation/src/app/%28home%29/_components/PostCretor/FacebookPostManager.tsx"],"sourcesContent":["\"use client\";\nimport { Facebook } from \"lucide-react\";\nimport PostManager from \"./PostManager\";\n\nconst FacebookPostManager = () => {\n  return <PostManager platformName=\"Facebook\" PublishIcon={Facebook} />;\n};\n\nexport default FacebookPostManager;\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIA,MAAM,sBAAsB;IAC1B,qBAAO,6LAAC,sKAAA,CAAA,UAAW;QAAC,cAAa;QAAW,aAAa,6MAAA,CAAA,WAAQ;;;;;;AACnE;KAFM;uCAIS"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}